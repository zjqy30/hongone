<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hone.dao.HoDictDao">

    <resultMap id="hoDictResultMap" type="com.hone.entity.HoDict">
        <id column="id" property="id"/> 
        <result column="dict_type" property="dictType"/> 
        <result column="dict_value" property="dictValue"/> 
        <result column="dict_desc" property="dictDesc"/> 
        <result column="dict_sort" property="dictSort"/> 
        <result column="pid" property="pid"/>
        <result column="dict_pic" property="dictPic"/>
        <result column="create_date" property="createDate"/> 
        <result column="update_date" property="updateDate"/> 
        <result column="enable_flag" property="enableFlag"/> 

        
        
    </resultMap>

    <sql id="hoDictColumns">
        a.id AS "id",
        a.dict_type AS "dictType",
        a.dict_value AS "dictValue",
        a.dict_desc AS "dictDesc",
        a.dict_sort AS "dictSort",
        a.dict_pic AS "dictPic",
        a.pid AS "pid",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",
        a.enable_flag AS "enableFlag"
    </sql>

    <sql id="hoDictJoins">
        
    </sql>

    <select id="selectByTypeAndValue" resultType="com.hone.entity.HoDict">

        select <include refid="hoDictColumns"></include>
        from ho_dict a where a.dict_type=#{type} and a.dict_value=#{value} and a.enable_flag='1'
    </select>


    <select id="findUniqueByProperty" resultType="com.hone.entity.HoDict" statementType="STATEMENT">
        select <include refid="hoDictColumns"></include> FROM ho_dict a  where a.${propertyName} = '${value}'
    </select>

    <select id="listByType" resultType="com.hone.entity.HoDict">
        select <include refid="hoDictColumns"></include> from ho_dict a where a.dict_type=#{type} and a.enable_flag='1' order by a.dict_sort asc
    </select>

    <select id="findIndustryStr" resultType="java.lang.String">
        select CONCAT(c.dict_value,'-',b.dict_value,'-',a.dict_value) as str from ho_dict  a
        inner join ho_dict b on a.pid=b.id
        inner join ho_dict c on c.id=b.pid
        where a.id=#{id}
    </select>


    <select id="sellerTagList" resultType="com.hone.entity.HoDict">
        select <include refid="hoDictColumns"/> from ho_dict a
        <if test="type!=null and type!='' and type=='1'.toString()">
            where a.pid='0' and a.dict_type='sellerTag' and a.enable_flag='1'
        </if>
        <if test="type!=null and type!='' and type=='2'.toString()">
            inner join ho_dict b on a.pid=b.id
            where a.dict_type='sellerTag' and b.pid='0'
        </if>
        <if test="type!=null and type!='' and type=='3'.toString()">
            inner join ho_dict b on a.pid=b.id
            where a.dict_type='sellerTag' and b.pid!='0'
        </if>
        order by a.create_date desc
    </select>


    <select id="sellerTagRepoList" resultType="com.hone.applet.repo.HoSellerTagRepo">
        select
        a.dict_value as 'name',
        a.id as 'id',
        #{type} as 'level',
        a.pid as 'pid'
        from ho_dict a
        <if test="type!=null and type!='' and type=='1'.toString()">
            where a.pid='0' and a.dict_type='sellerTag' and a.enable_flag='1'
        </if>
        <if test="type!=null and type!='' and type=='2'.toString()">
            inner join ho_dict b on a.pid=b.id
            where a.dict_type='sellerTag' and b.pid='0'
        </if>
        <if test="type!=null and type!='' and type=='3'.toString()">
            inner join ho_dict b on a.pid=b.id
            where a.dict_type='sellerTag' and b.pid!='0'
        </if>
        order by a.create_date desc
    </select>


</mapper>